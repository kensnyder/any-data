// Generated by dts-bundle-generator v9.5.1

import { TypedArray } from 'type-fest';

export type SupportedData = Blob | ArrayBuffer | TypedArray | DataView | FormData | URLSearchParams | null | string | Record<string, any> | Array<any> | Response;
export type DataCategory = "bytes" | "text" | "unknown";
export declare class AnyData {
	data: SupportedData;
	constructor(data?: SupportedData);
	set(data: SupportedData): void;
	isSupported(): boolean;
	getDataCategory(): DataCategory;
	isEmpty(): boolean;
	clone(): Promise<AnyData>;
	blob(): Promise<Blob>;
	arrayBuffer(): Promise<ArrayBuffer>;
	bytes(): Promise<TypedArray>;
	formData(): Promise<FormData>;
	json(): Promise<any>;
	text(): Promise<string>;
}

export {};
